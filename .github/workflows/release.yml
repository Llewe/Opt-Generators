name: Build and Release Python Package from Rust with Maturin

on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Rust
      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      # Step 3: Install Python and maturin
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9  # Choose the Python version you need

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      # Step 4: Install dependencies (if any)
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt  # If you have a requirements.txt for Python dependencies

      # Step 5: Build the package using maturin
      - name: Build Python package
        run: |
          maturin build --release --strip

      # Step 6: Upload the package to GitHub Releases
      - name: Upload to GitHub Release
        uses: ghaction/gh-release@v1
        with:
          files: "target/wheels/*.whl"  # Path to the built wheel file

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 1: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9  # Choose the Python version you need

      # Step 2: Install maturin
      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      # Step 3: Generate the wheel (same as the build job)
      - name: Build Python package
        run: |
          maturin build --release --strip

      # Step 4: Publish the package to PyPI (if desired)
      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          python -m pip install twine
          twine upload dist/* --repository-url https://upload.pypi.org/legacy/ --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }}

